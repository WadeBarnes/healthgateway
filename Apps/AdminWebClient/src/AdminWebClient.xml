<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AdminWebClient</name>
    </assembly>
    <members>
        <member name="T:HealthGateway.Admin.Controllers.BetaRequestController">
            <summary>
            Web API to handle user email interactions.
            </summary>
        </member>
        <member name="M:HealthGateway.Admin.Controllers.BetaRequestController.#ctor(HealthGateway.Admin.Services.IBetaRequestService,Microsoft.AspNetCore.Http.IHttpContextAccessor,Microsoft.AspNetCore.Authorization.IAuthorizationService)">
            <summary>
            Initializes a new instance of the <see cref="T:HealthGateway.Admin.Controllers.BetaRequestController"/> class.
            </summary>
            <param name="betaRequestService">The injected user email service.</param>
            <param name="httpContextAccessor">The injected http context accessor provider.</param>
            <param name="authorizationService">The injected authorization service.</param>
        </member>
        <member name="M:HealthGateway.Admin.Controllers.BetaRequestController.GetBetaRequests">
            <summary>
            Validates an email invite.
            </summary>
            <returns>The invite email.</returns>
            <param name="hdid">The user hdid.</param>
            <response code="200">Returns the user email invite json.</response>
            <response code="401">the client must authenticate itself to get the requested response.</response>
            <response code="403">The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource. Unlike 401, the client's identity is known to the server.</response>
        </member>
        <member name="T:HealthGateway.Admin.Models.UserBetaRequest">
            <summary>
            Model that provides a user representation of an EmailInvite.
            </summary>
        </member>
        <member name="P:HealthGateway.Admin.Models.UserBetaRequest.Id">
            <summary>
            Gets or sets the beta request id.
            </summary>
        </member>
        <member name="P:HealthGateway.Admin.Models.UserBetaRequest.EmailAddress">
            <summary>
            Gets or sets the email for the beta request.
            </summary>
        </member>
        <member name="P:HealthGateway.Admin.Models.UserBetaRequest.Version">
            <summary>
            Version of the resource.
            </summary>
        </member>
        <member name="P:HealthGateway.Admin.Models.UserBetaRequest.RegistrationDatetime">
            <summary>
            Date when the request was created
            </summary>
        </member>
        <member name="M:HealthGateway.Admin.Models.UserBetaRequest.CreateFromDbModel(HealthGateway.Database.Models.BetaRequest)">
            <summary>
            Constructs a UserBetaRequest from a BetaRequest model.
            </summary>
        </member>
        <member name="M:HealthGateway.Admin.Models.UserBetaRequest.CreateListFromDbModel(System.Collections.Generic.List{HealthGateway.Database.Models.BetaRequest})">
            <summary>
            Constructs a List of UserBetaRequest from a list of BetaRequest models.
            </summary>
        </member>
        <member name="T:HealthGateway.Admin.Services.BetaRequestService">
            <inheritdoc />
        </member>
        <member name="M:HealthGateway.Admin.Services.BetaRequestService.#ctor(Microsoft.Extensions.Logging.ILogger{HealthGateway.Admin.Services.BetaRequestService},HealthGateway.Database.Delegates.IBetaRequestDelegate)">
            <summary>
            Initializes a new instance of the <see cref="T:HealthGateway.Admin.Services.BetaRequestService"/> class.
            </summary>
            <param name="logger">Injected Logger Provider.</param>
            <param name="betaRequestDelegate">The email delegate to interact with the DB.</param>
            <param name="emailQueueService">The email service to queue emails.</param>
        </member>
        <member name="M:HealthGateway.Admin.Services.BetaRequestService.GetPendingBetaRequests">
            <inheritdoc />
        </member>
        <member name="T:HealthGateway.Admin.Services.IBetaRequestService">
            <summary>
            Service that provides functionality to access and create requests for beta access.
            </summary>
        </member>
        <member name="M:HealthGateway.Admin.Services.IBetaRequestService.GetPendingBetaRequests">
            <summary>
            Retrieves the beta requests where the user does not have an invite yet.
            </summary>
            <returns>returns the beta request for the user if found.</returns>
        </member>
        <member name="T:HealthGateway.AdminWebClient.Program">
            <summary>
            The entry point for the project.
            </summary>
        </member>
        <member name="M:HealthGateway.AdminWebClient.Program.Main(System.String[])">
            <summary>.
            The entry point for the class.
            </summary>
            <param name="args">The command line arguments to be passed in.</param>
        </member>
        <member name="M:HealthGateway.AdminWebClient.Program.CreateHostBuilder(System.String[])">
            <summary>.
            Creates the IWebHostBuilder.
            </summary>
            <param name="args">The command line arguments to be passed in.</param>
            <returns>Returns the configured webhost.</returns>
        </member>
        <member name="T:HealthGateway.AdminWebClient.Startup">
            <summary>
            Configures the application during startup.
            </summary>
        </member>
        <member name="M:HealthGateway.AdminWebClient.Startup.#ctor(Microsoft.AspNetCore.Hosting.IWebHostEnvironment,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:HealthGateway.AdminWebClient.Startup"/> class.
            </summary>
            <param name="env">The injected Environment provider.</param>
            <param name="configuration">The injected configuration provider.</param>
        </member>
        <member name="M:HealthGateway.AdminWebClient.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            This method gets called by the runtime. Use this method to add services to the container.
            </summary>
            <param name="services">The injected services provider.</param>
        </member>
    </members>
</doc>
