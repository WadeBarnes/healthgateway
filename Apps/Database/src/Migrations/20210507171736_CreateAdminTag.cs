// -------------------------------------------------------------------------
//  Copyright © 2019 Province of British Columbia
//
//  Licensed under the Apache License, Version 2.0 (the "License");
//  you may not use this file except in compliance with the License.
//  You may obtain a copy of the License at
//
//  http://www.apache.org/licenses/LICENSE-2.0
//
//  Unless required by applicable law or agreed to in writing, software
//  distributed under the License is distributed on an "AS IS" BASIS,
//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//  See the License for the specific language governing permissions and
//  limitations under the License.
// -------------------------------------------------------------------------
#pragma warning disable CS1591
// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore.Migrations;

namespace HealthGateway.Database.Migrations
{
    public partial class CreateAdminTag : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.CreateTable(
                name: "AdminTag",
                schema: "gateway",
                columns: table => new
                {
                    AdminTagId = table.Column<Guid>(type: "uuid", nullable: false),
                    Name = table.Column<string>(type: "character varying(20)", maxLength: 20, nullable: false),
                    CreatedBy = table.Column<string>(type: "character varying(60)", maxLength: 60, nullable: false),
                    CreatedDateTime = table.Column<DateTime>(type: "timestamp without time zone", nullable: false),
                    UpdatedBy = table.Column<string>(type: "character varying(60)", maxLength: 60, nullable: false),
                    UpdatedDateTime = table.Column<DateTime>(type: "timestamp without time zone", nullable: false),
                    xmin = table.Column<uint>(type: "xid", rowVersion: true, nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_AdminTag", x => x.AdminTagId);
                });

            migrationBuilder.CreateTable(
                name: "UserFeedbackTag",
                schema: "gateway",
                columns: table => new
                {
                    UserFeedbackTagId = table.Column<Guid>(type: "uuid", nullable: false),
                    AdminTagId = table.Column<Guid>(type: "uuid", nullable: false),
                    UserFeedbackId = table.Column<Guid>(type: "uuid", nullable: false),
                    CreatedBy = table.Column<string>(type: "character varying(60)", maxLength: 60, nullable: false),
                    CreatedDateTime = table.Column<DateTime>(type: "timestamp without time zone", nullable: false),
                    UpdatedBy = table.Column<string>(type: "character varying(60)", maxLength: 60, nullable: false),
                    UpdatedDateTime = table.Column<DateTime>(type: "timestamp without time zone", nullable: false),
                    xmin = table.Column<uint>(type: "xid", rowVersion: true, nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_UserFeedbackTag", x => x.UserFeedbackTagId);
                    table.ForeignKey(
                        name: "FK_UserFeedbackTag_AdminTag_AdminTagId",
                        column: x => x.AdminTagId,
                        principalSchema: "gateway",
                        principalTable: "AdminTag",
                        principalColumn: "AdminTagId",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "FK_UserFeedbackTag_UserFeedback_UserFeedbackId",
                        column: x => x.UserFeedbackId,
                        principalSchema: "gateway",
                        principalTable: "UserFeedback",
                        principalColumn: "UserFeedbackId",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateIndex(
                name: "IX_UserFeedbackTag_AdminTagId_UserFeedbackId",
                schema: "gateway",
                table: "UserFeedbackTag",
                columns: new[] { "AdminTagId", "UserFeedbackId" },
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_UserFeedbackTag_UserFeedbackId",
                schema: "gateway",
                table: "UserFeedbackTag",
                column: "UserFeedbackId");
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropTable(
                name: "UserFeedbackTag",
                schema: "gateway");

            migrationBuilder.DropTable(
                name: "AdminTag",
                schema: "gateway");
        }
    }
}
