pr: none
trigger: none
schedules:
  - cron: "0 0 * * *"
    displayName: Daily midnight build
    branches:
      include:
        - dev
pool:
  name: "HealthGateway"

jobs:
  - job: AnalyzeProjects
    timeoutInMinutes: 120
    steps:
      - script: |
          set -e
          export SONAR_SCANNER_OPTS="-Xmx3072m"
          dotnet test \
            test/unit/DatabaseTests.csproj \
            /p:CollectCoverage=true \
            /p:CoverletOutputFormat=opencover \
            --logger:"xunit;LogFileName=results.xml" \
            -r ./xUnitResults 
          dotnet sonarscanner begin \
            /o:bcgov-sonarcloud \
            /d:sonar.verbose=false \
            /k:hg-database \
            /n:"HealthGateway Database Library" \
            /d:sonar.host.url="https://sonarcloud.io" \
            /d:sonar.login="$(database.login)" \
            /d:sonar.scm.disabled="true" \
            /d:sonar.coverage.exclusions="**Tests*.cs" \
            /d:sonar.cs.opencover.reportsPaths="**/coverage.opencover.xml" \
            /d:sonar.cs.xunit.reportsPaths="**/xUnitResults/results.xml" 
          dotnet build    
          dotnet sonarscanner end /d:sonar.login="$(database.login)"
          echo "$@" >&2
        displayName: "Database - Perform Static Code Analysis"
        continueOnError: true
        workingDirectory: $(Build.SourcesDirectory)/Apps/Database
        enabled: "true"

      - script: |
          curl '-X' POST '-H' 'Content-Type: application/json' '--data' '{"icon_emoji":":cloud_lightning:","text":"Database Analysis Failed."}' https://chat.pathfinder.gov.bc.ca/hooks/WEHBAtxe6ufWYj2FR/2MMMbS9btPZxtrbgPckiuCqqLzsnEuuWmozKjtY8fXrWHjoa
        displayName: "Database - On Fail"
        condition: failed()

      - script: |
          set -e
          export SONAR_SCANNER_OPTS="-Xmx3072m"
          dotnet test \
            test/unit/CommonTests.csproj \
            /p:CollectCoverage=true \
            /p:CoverletOutputFormat=opencover \
            --logger:"xunit;LogFileName=results.xml" \
            -r ./xUnitResults 
          dotnet sonarscanner begin \
            /o:bcgov-sonarcloud \
            /d:sonar.verbose=false \
            /k:hg-common \
            /n:"HealthGateway Common Library" \
            /d:sonar.host.url="https://sonarcloud.io" \
            /d:sonar.login="$(common.login)" \
            /d:sonar.scm.disabled="true" \
            /d:sonar.coverage.exclusions="**Tests*.cs, **/Database/**" \
            /d:sonar.cs.opencover.reportsPaths="**/coverage.opencover.xml" \
            /d:sonar.cs.xunit.reportsPaths="**/xUnitResults/results.xml" 
          dotnet build    
          dotnet sonarscanner end /d:sonar.login="$(common.login)"
          echo "$@" >&2
        displayName: "Common - Perform Static Code Analysis"
        continueOnError: true
        workingDirectory: $(Build.SourcesDirectory)/Apps/Common
        enabled: "true"

      - script: |
          curl '-X' POST '-H' 'Content-Type: application/json' '--data' '{"icon_emoji":":cloud_lightning:","text":"Common Analysis Failed."}' https://chat.pathfinder.gov.bc.ca/hooks/WEHBAtxe6ufWYj2FR/2MMMbS9btPZxtrbgPckiuCqqLzsnEuuWmozKjtY8fXrWHjoa
        displayName: "Common - On Fail"
        condition: failed()

      - script: |
          set -e
          export SONAR_SCANNER_OPTS="-Xmx3072m"
          dotnet test \
            test/unit/AdminWebClientTests.csproj \
            /p:CollectCoverage=true \
            /p:CoverletOutputFormat=opencover \
            --logger:"xunit;LogFileName=results.xml" \
            -r ./xUnitResults 
          dotnet sonarscanner begin \
            /o:bcgov-sonarcloud \
            /k:hg-adminwebclient \
            /n:"HealthGateway Admin WebClient" \
            /d:sonar.host.url="https://sonarcloud.io" \
            /d:sonar.login="$(adminwebclient.login)" \
            /d:sonar.verbose=false \
            /d:sonar.coverage.exclusions="**Tests*.cs, **test*.ts, **/Common/**, **/Startup.cs, **/Program.cs" \
            /d:sonar.cs.opencover.reportsPaths="**/coverage.opencover.xml" \
            /d:sonar.typescript.lcov.reportPaths="../sonar_reports/jest.out/lcov.info" \
            /d:sonar.cs.xunit.reportsPaths="**/xUnitResults/results.xml" \
            /d:sonar.test.inclusions="**/*.test.ts"
          dotnet build    
          dotnet sonarscanner end /d:sonar.login="$(adminwebclient.login)"
          echo "$@" >&2
        displayName: "AdminWebClient - Perform Static Code Analysis"
        workingDirectory: $(Build.SourcesDirectory)/Apps/AdminWebClient
        continueOnError: true

      - script: |
          curl '-X' POST '-H' 'Content-Type: application/json' '--data' '{"icon_emoji":":cloud_lightning:","text":"AdminWebClient Analysis Failed."}' https://chat.pathfinder.gov.bc.ca/hooks/WEHBAtxe6ufWYj2FR/2MMMbS9btPZxtrbgPckiuCqqLzsnEuuWmozKjtY8fXrWHjoa
        displayName: "AdminWebClient - On Fail"
        condition: failed()

      - script: |
          set -e
          export SONAR_SCANNER_OPTS="-Xmx3072m"
          dotnet test \
            test/unit/MedicationTests.csproj \
            /p:CollectCoverage=true \
            /p:CoverletOutputFormat=opencover \
            --logger:"xunit;LogFileName=results.xml" \
            -r ./xUnitResults 
          dotnet sonarscanner begin \
            /o:bcgov-sonarcloud \
            /d:sonar.verbose=false \
            /k:hg-medication \
            /n:"HealthGateway Medication Service" \
            /d:sonar.host.url="https://sonarcloud.io" \
            /d:sonar.login="$(medication.login)" /d:sonar.scm.disabled="true" \
            /d:sonar.coverage.exclusions="**Tests*.cs, **/Common/**, **/Startup.cs, **/Program.cs" \
            /d:sonar.cs.opencover.reportsPaths="**/coverage.opencover.xml" \
            /d:sonar.cs.xunit.reportsPaths="**/xUnitResults/results.xml" 
          dotnet build    
          dotnet sonarscanner end /d:sonar.login="$(medication.login)"
          echo "$@" >&2
        displayName: "Medication - Perform Static Code Analysis"
        workingDirectory: $(Build.SourcesDirectory)/Apps/Medication
        enabled: "true"
        continueOnError: true

      - script: |
          curl '-X' POST '-H' 'Content-Type: application/json' '--data' '{"icon_emoji":":cloud_lightning:","text":"Medication Analysis Failed."}' https://chat.pathfinder.gov.bc.ca/hooks/WEHBAtxe6ufWYj2FR/2MMMbS9btPZxtrbgPckiuCqqLzsnEuuWmozKjtY8fXrWHjoa
        displayName: "Medication - On Fail"
        condition: failed()

      - script: |
          set -e
          export SONAR_SCANNER_OPTS="-Xmx3072m"
          dotnet test \
            test/unit/EncounterTests.csproj \
            /p:CollectCoverage=true \
            /p:CoverletOutputFormat=opencover \
            --logger:"xunit;LogFileName=results.xml" \
            -r ./xUnitResults 
          dotnet sonarscanner begin \
            /o:bcgov-sonarcloud \
            /d:sonar.verbose=false \
            /k:hg-encounter \
            /n:"HealthGateway Encounter Service" \
            /d:sonar.host.url="https://sonarcloud.io" \
            /d:sonar.login="$(encounter.login)" /d:sonar.scm.disabled="true" \
            /d:sonar.coverage.exclusions="**Tests*.cs, **/Common/**, **/Startup.cs, **/Program.cs" \
            /d:sonar.cs.opencover.reportsPaths="**/coverage.opencover.xml" \
            /d:sonar.cs.xunit.reportsPaths="**/xUnitResults/results.xml" 
          dotnet build    
          dotnet sonarscanner end /d:sonar.login="$(encounter.login)"
          echo "$@" >&2
        displayName: "Encounter - Perform Static Code Analysis"
        workingDirectory: $(Build.SourcesDirectory)/Apps/Encounter
        enabled: "true"
        continueOnError: true

      - script: |
          curl '-X' POST '-H' 'Content-Type: application/json' '--data' '{"icon_emoji":":cloud_lightning:","text":"Encounter Analysis Failed."}' https://chat.pathfinder.gov.bc.ca/hooks/WEHBAtxe6ufWYj2FR/2MMMbS9btPZxtrbgPckiuCqqLzsnEuuWmozKjtY8fXrWHjoa
        displayName: "Encounter - On Fail"
        condition: failed()

      - script: |
          set -e
          export SONAR_SCANNER_OPTS="-Xmx3072m"
          dotnet test \
            test/unit/PatientTests.csproj \
            /p:CollectCoverage=true \
            /p:CoverletOutputFormat=opencover \
            --logger:"xunit;LogFileName=results.xml" \
            -r ./xUnitResults 
          dotnet sonarscanner begin \
            /o:bcgov-sonarcloud \
            /d:sonar.verbose=false \
            /k:hg-patient \
            /n:"HealthGateway Patient Service" \
            /d:sonar.host.url="https://sonarcloud.io" \
            /d:sonar.login="$(patient.login)" \
            /d:sonar.scm.disabled="true" \
            /d:sonar.coverage.exclusions="**Tests*.cs, **/Common/**, **/Startup.cs, **/Program.cs" \
            /d:sonar.cs.opencover.reportsPaths="**/coverage.opencover.xml" \
            /d:sonar.cs.xunit.reportsPaths="**/xUnitResults/results.xml" 
          dotnet build    
          dotnet sonarscanner end /d:sonar.login="$(patient.login)"
          echo "$@" >&2
        displayName: "Patient - Perform Static Code Analysis"
        workingDirectory: $(Build.SourcesDirectory)/Apps/Patient
        enabled: "true"
        continueOnError: true

      - script: |
          curl '-X' POST '-H' 'Content-Type: application/json' '--data' '{"icon_emoji":":cloud_lightning:","text":"Patient Analysis Failed."}' https://chat.pathfinder.gov.bc.ca/hooks/WEHBAtxe6ufWYj2FR/2MMMbS9btPZxtrbgPckiuCqqLzsnEuuWmozKjtY8fXrWHjoa
        displayName: "Patient - On Fail"
        condition: failed()

      - script: |
          set -e
          export SONAR_SCANNER_OPTS="-Xmx3072m"
          dotnet test \
            test/unit/ImmunizationTests.csproj \
            /p:CollectCoverage=true \
            /p:CoverletOutputFormat=opencover \
            --logger:"xunit;LogFileName=results.xml" \
            -r ./xUnitResults 
          dotnet sonarscanner begin \
            /o:bcgov-sonarcloud \
            /d:sonar.verbose=false \
            /k:hg-immunization \
            /n:"HealthGateway Immunization Service" \
            /d:sonar.host.url="https://sonarcloud.io" \
            /d:sonar.login="$(immunization.login)" \
            /d:sonar.scm.disabled="true" \
            /d:sonar.coverage.exclusions="**Tests*.cs, **/Common/**, **/Startup.cs, **/Program.cs" \
            /d:sonar.cs.opencover.reportsPaths="**/coverage.opencover.xml" \
            /d:sonar.cs.xunit.reportsPaths="**/xUnitResults/results.xml" 
          dotnet build    
          dotnet sonarscanner end /d:sonar.login="$(immunization.login)"
          echo "$@" >&2
        displayName: "Immunization - Perform Static Code Analysis"
        workingDirectory: $(Build.SourcesDirectory)/Apps/Immunization
        continueOnError: true

      - script: |
          curl '-X' POST '-H' 'Content-Type: application/json' '--data' '{"icon_emoji":":cloud_lightning:","text":"Immunization Analysis Failed."}' https://chat.pathfinder.gov.bc.ca/hooks/WEHBAtxe6ufWYj2FR/2MMMbS9btPZxtrbgPckiuCqqLzsnEuuWmozKjtY8fXrWHjoa
        displayName: "Immunization - On Fail"
        condition: failed()

      - script: |
          set -e
          export SONAR_SCANNER_OPTS="-Xmx3072m"
          dotnet test \
            test/unit/LaboratoryTests.csproj \
            /p:CollectCoverage=true \
            /p:CoverletOutputFormat=opencover \
            --logger:"xunit;LogFileName=results.xml" \
            -r ./xUnitResults 
          dotnet sonarscanner begin \
            /o:bcgov-sonarcloud \
            /d:sonar.verbose=false \
            /k:hg-laboratory \
            /n:"HealthGateway Laboratory Service" \
            /d:sonar.host.url="https://sonarcloud.io" \
            /d:sonar.login="$(laboratory.login)" \
            /d:sonar.scm.disabled="true" \
            /d:sonar.coverage.exclusions="**Tests*.cs, **/Common/**, **/Startup.cs, **/Program.cs" \
            /d:sonar.cs.opencover.reportsPaths="**/coverage.opencover.xml" \
            /d:sonar.cs.xunit.reportsPaths="**/xUnitResults/results.xml" 
          dotnet build    
          dotnet sonarscanner end /d:sonar.login="$(laboratory.login)"
          echo "$@" >&2
        displayName: "Laboratory - Perform Static Code Analysis"
        workingDirectory: $(Build.SourcesDirectory)/Apps/Laboratory
        continueOnError: true

      - script: |
          curl '-X' POST '-H' 'Content-Type: application/json' '--data' '{"icon_emoji":":cloud_lightning:","text":"Laboratory Analysis Failed."}' https://chat.pathfinder.gov.bc.ca/hooks/WEHBAtxe6ufWYj2FR/2MMMbS9btPZxtrbgPckiuCqqLzsnEuuWmozKjtY8fXrWHjoa
        displayName: "Laboratory - On Fail"
        condition: failed()

      - script: |
          set -e
          export SONAR_SCANNER_OPTS="-Xmx3072m"
          dotnet test \
            test/unit/WebClientTests.csproj \
            /p:CollectCoverage=true \
            /p:CoverletOutputFormat=opencover \
            --logger:"xunit;LogFileName=results.xml" \
            -r ./xUnitResults 
          npm --prefix src/ClientApp install --only=dev
          npm --prefix src/ClientApp test
          dotnet sonarscanner begin \
            /o:bcgov-sonarcloud \
            /k:hg-webclient \
            /n:"HealthGateway WebClient" \
            /d:sonar.host.url="https://sonarcloud.io" \
            /d:sonar.login="$(webclient.login)" \
            /d:sonar.verbose=false \
            /d:sonar.coverage.exclusions="**Tests*.cs, **test*.ts, **/Common/**, **/Startup.cs, **/Program.cs" \
            /d:sonar.cs.opencover.reportsPaths="**/coverage.opencover.xml" \
            /d:sonar.typescript.lcov.reportPaths="../sonar_reports/jest.out/lcov.info" \
            /d:sonar.cs.xunit.reportsPaths="**/xUnitResults/results.xml" \
            /d:sonar.test.inclusions="**/*.test.ts"
          dotnet build    
          dotnet sonarscanner end /d:sonar.login="$(webclient.login)"
          echo "$@" >&2
        displayName: "WebClient - Perform Static Code Analysis"
        workingDirectory: $(Build.SourcesDirectory)/Apps/WebClient
        continueOnError: true

      - script: |
          curl '-X' POST '-H' 'Content-Type: application/json' '--data' '{"icon_emoji":":cloud_lightning:","text":"WebClient Analysis Failed."}' https://chat.pathfinder.gov.bc.ca/hooks/WEHBAtxe6ufWYj2FR/2MMMbS9btPZxtrbgPckiuCqqLzsnEuuWmozKjtY8fXrWHjoa
        displayName: "WebClient - On Fail"
        condition: failed()
