steps:
- task: Npm@1
  displayName: Install NPM Packages
  inputs:
    command: 'install'
    workingDir: '$(Build.SourcesDirectory)/Apps/WebClient/src/ClientApp'

- task: DotNetCoreCLI@2
  displayName: Run dotnet Tests
  inputs:
    command: 'test'
    projects: '$(Build.SourcesDirectory)/Apps/WebClient/test/unit/WebClientTests.csproj'
    testRunTitle: 'WebClient'

- script: |
    set -e
    dotnet test \
      test/unit/WebClientTests.csproj \
      /p:CollectCoverage=true \
      /p:CoverletOutputFormat=opencover \
      --logger:"xunit;LogFileName=results.xml" \
      -r ./xUnitResults 
    npm --prefix src/ClientApp test
    dotnet sonarscanner begin \
      /d:sonar.verbose=false \
      /k:"webclient_dev" \
      /d:sonar.host.url="https://sonarqube-gateway.pathfinder.gov.bc.ca" \
      /d:sonar.login="$(sonar.login)" \
      /d:sonar.scm.disabled="true" \
      /d:sonar.typescript.test.reportPaths="../sonar_reports/jest.out/lcov.info" \
      /d:sonar.coverage.exclusions="**Tests*.cs, **test*.ts, **/Common/**, **/Startup.cs, **/Program.cs" \
      /d:sonar.cs.opencover.reportsPaths="**/coverage.opencover.xml" \
      /d:sonar.typescript.lcov.reportPaths="../sonar_reports/jest.out/lcov.info" \
      /d:sonar.cs.xunit.reportsPaths="**/xUnitResults/results.xml" \
      /d:sonar.test.inclusions="**/*.test.ts"
    dotnet build    
    dotnet sonarscanner end /d:sonar.login="$(sonar.login)"
    echo "$@" >&2
  displayName: 'Perform Static Code Analysis'
  continueOnError: 'false'
  workingDirectory: $(Build.SourcesDirectory)/Apps/WebClient
